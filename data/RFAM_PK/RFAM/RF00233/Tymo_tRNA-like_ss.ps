%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Sat Nov 28 23:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUAG_GUCGCCAGU__GCGACGCCCGUUCCCACACAACGGUU_AAU_CG_GGUGCAACUCCCCCC_CCUAUCCCGAG_GGUCAUCGGGACCA\
) def
/coor [
[94.09509277 166.85838318]
[84.66626740 165.34361267]
[75.54785919 162.50602722]
[66.92445374 158.40307617]
[58.97063446 153.11781311]
[51.84741211 146.75723267]
[39.98577499 155.93882751]
[28.12413788 165.12042236]
[16.26250267 174.30200195]
[4.40086603 183.48359680]
[2.65305018 199.19093323]
[-9.74162102 208.99642944]
[-25.42960930 207.08264160]
[-35.10350800 194.58499146]
[-33.02396774 178.91812134]
[-20.42473984 169.37689209]
[-4.78072357 171.62196350]
[7.08091259 162.44036865]
[18.94254875 153.25877380]
[30.80418396 144.07719421]
[42.66582108 134.89559937]
[32.91965866 102.26687622]
[40.44083023 69.05462646]
[27.98640633 60.69475937]
[15.53198528 52.33489227]
[3.07756305 43.97502518]
[-9.37685871 35.61515808]
[-21.83128166 27.25529099]
[-36.80207825 31.77295303]
[-51.15382004 25.56316185]
[-58.11005402 11.55799103]
[-54.38626099 -3.62974668]
[-41.74069595 -12.82886505]
[-26.14421654 -11.69582272]
[-14.96099663 -0.76560634]
[-13.47141361 14.80086899]
[-1.01699185 23.16073608]
[11.43743038 31.52060318]
[23.89185143 39.88047028]
[36.34627533 48.24033737]
[48.80069733 56.60020447]
[56.90523911 48.54368210]
[66.25904083 41.97880936]
[76.59094238 37.09589005]
[87.60144043 34.03647232]
[98.97135925 32.88924789]
[110.37109375 33.68746948]
[121.47018433 36.40800095]
[131.94688416 40.97197723]
[134.35632324 31.94152451]
[141.01905823 28.39608574]
[149.99899292 16.38106918]
[146.24539185 1.20067251]
[153.17411804 -12.81812859]
[167.51364136 -19.05608368]
[182.49327087 -14.56782341]
[191.04010010 -1.47256410]
[189.11856079 14.04651165]
[177.63595581 24.66177177]
[162.01400757 25.36101341]
[153.03407288 37.37602997]
[144.25833130 49.54100037]
[151.00331116 56.37003708]
[156.70520020 64.09135437]
[161.24742126 72.54705048]
[164.53706360 81.56418610]
[166.50683594 90.95835114]
[167.11648560 100.53742981]
[166.35351562 110.10551453]
[164.23355103 119.46693420]
[160.79994202 128.43023682]
[156.12289429 136.81210327]
[167.66766357 146.38906860]
[179.21243286 155.96603394]
[190.75720215 165.54301453]
[202.30197144 175.11997986]
[217.65299988 172.14006042]
[231.30288696 179.76994324]
[236.80654907 194.40699768]
[231.56533813 209.14009094]
[218.05400085 217.01268005]
[202.65216064 214.30757141]
[192.63211060 202.30204773]
[192.72500610 186.66474915]
[181.18023682 177.08778381]
[169.63546753 167.51080322]
[158.09069824 157.93383789]
[146.54592896 148.35687256]
[139.21194458 154.47323608]
[131.08416748 159.48686218]
[122.32710266 163.29621887]
[113.11806488 165.82421875]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[49 62]
[51 61]
[52 60]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 21 3 gmark
6 cmark
21 cmark
7 20 1 gmark
7 cmark
20 cmark
8 19 1 gmark
8 cmark
19 cmark
9 18 1 gmark
9 cmark
18 cmark
10 17 1 gmark
10 cmark
17 cmark
23 41 7 gmark
23 cmark
41 cmark
24 cmark
40 cmark
25 39 1 gmark
25 cmark
39 cmark
26 cmark
38 cmark
27 cmark
37 cmark
28 cmark
36 cmark
72 cmark
88 cmark
73 87 4 gmark
73 cmark
87 cmark
74 86 4 gmark
74 cmark
86 cmark
76 cmark
84 cmark

% End Annotations
% show it
showpage
end
%%EOF
