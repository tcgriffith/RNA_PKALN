%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Sat Nov 28 23:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUACUGAAAUGCAUGG_UGGGAAAUCAGUGUGAA_____AUUCAUUGGCUGUUCCUGCAACCGU__________AA_A___________________GUCGGAGCGCCACCCAGUAU_AGUCCGCUGUUGAAUGAAGGCCAGGAAAAGUC__U_A__G_UUCUAC_AAUGAAAAA\
) def
/coor [
[228.99327087 219.68440247]
[233.77600098 206.27520752]
[220.87579346 198.62115479]
[207.97557068 190.96710205]
[195.07536316 183.31304932]
[182.17515564 175.65899658]
[186.25689697 190.09297180]
[182.26179504 204.55114746]
[171.34820557 214.84161377]
[156.68035889 217.98074341]
[142.51100159 213.05841064]
[132.94834900 201.50177002]
[130.76498413 186.66152954]
[136.59391785 172.84040833]
[148.74514771 164.04565430]
[163.69317627 162.82673645]
[156.48866272 161.07231140]
[151.89105225 153.14097595]
[140.38128662 143.52197266]
[128.87152100 133.90296936]
[117.29504395 141.03483582]
[104.10610199 144.34091187]
[90.53433228 143.51295471]
[77.84507751 138.62817383]
[67.22138977 130.14198303]
[59.65373611 118.84556580]
[45.18820572 122.81398773]
[30.72267532 126.78241730]
[16.25714302 130.75083923]
[1.79161143 134.71926880]
[-0.90600473 149.74209595]
[-9.86159229 162.10173035]
[-23.29701233 169.34411621]
[-38.54465103 170.03129578]
[-52.57708359 164.02682495]
[-62.60815430 152.52290344]
[-66.64618683 137.80361938]
[-63.88943481 122.79152679]
[-54.88524628 110.46726990]
[-41.42140961 103.27784729]
[-26.17118263 102.65071106]
[-12.16250515 108.71039581]
[-2.17681384 120.25373077]
[12.28871822 116.28530884]
[26.75424957 112.31688690]
[41.21977997 108.34845734]
[55.68531418 104.38003540]
[55.46956253 99.87263489]
[55.71109390 95.36654663]
[56.40742493 90.90803528]
[42.44898224 85.41605377]
[28.49053955 79.92407227]
[12.36150646 82.88824463]
[1.93740630 70.22845459]
[7.94166088 54.96801758]
[24.19760704 52.80556107]
[33.98252106 65.96562958]
[47.94096375 71.45761108]
[61.89941025 76.94959259]
[70.83864594 66.34600067]
[82.60649109 59.00680161]
[79.15690613 44.40884781]
[75.70732117 29.81088829]
[60.70598221 30.81575203]
[45.74386215 29.33761978]
[31.22914124 25.41681671]
[17.55778694 19.16030502]
[5.10276651 10.73876572]
[-5.79613924 0.38194579]
[-14.84160042 -11.62761307]
[-21.78684998 -24.96228218]
[-26.44241524 -39.25827789]
[-28.68128967 -54.12560272]
[-28.44239616 -69.15866089]
[-25.73225021 -83.94733429]
[-20.62478828 -98.08818817]
[-13.25934410 -111.19544220]
[-3.83685398 -122.91152191]
[7.38563061 -132.91680908]
[20.10195160 -140.93833923]
[33.96519852 -146.75729370]
[48.59717560 -150.21492004]
[63.59870529 -151.21688843]
[78.56053925 -149.73588562]
[93.07450867 -145.81228638]
[106.74465179 -139.55313110]
[119.19805145 -131.12919617]
[130.09495544 -120.77027893]
[139.13810730 -108.75897217]
[146.08079529 -95.42296600]
[150.73359680 -81.12607574]
[152.96960449 -66.25831604]
[152.72781372 -51.22530746]
[150.01483154 -36.43715286]
[144.90463257 -22.29728699]
[137.53666687 -9.19145203]
[128.11192322 2.52281260]
[116.88751221 12.52593327]
[104.16964722 20.54501915]
[90.30527496 26.36130142]
[93.75485992 40.95925903]
[97.20445251 55.55721664]
[116.07337189 58.47142029]
[131.98753357 69.01978302]
[142.02146912 85.26321411]
[144.33062744 104.21569061]
[138.49052429 122.39320374]
[150.00028992 132.01220703]
[161.51005554 141.63121033]
[173.10520935 151.14710999]
[184.80183411 153.42539978]
[189.82919312 162.75878906]
[202.72941589 170.41284180]
[215.62962341 178.06687927]
[228.52984619 185.72093201]
[241.43005371 193.37498474]
[252.12458801 181.64326477]
[265.00494385 172.37344360]
[279.51559448 165.96249390]
[295.03140259 162.68420410]
[310.88427734 162.67741394]
[326.39218140 165.94017029]
[340.88836670 172.32986450]
[353.75006104 181.56956482]
[364.42520142 193.25987244]
[372.45614624 206.89633179]
[377.49935913 221.89109802]
[379.33996582 237.59829712]
[377.90100098 253.34190369]
[373.24661255 268.44473267]
[386.41180420 275.63348389]
[399.57699585 282.82220459]
[412.80581665 289.89315796]
[430.16979980 280.06027222]
[449.81246948 282.63986206]
[463.84411621 296.42169189]
[466.73370361 315.73114014]
[480.48721313 321.71783447]
[494.24075317 327.70452881]
[507.54504395 319.71853638]
[522.99945068 321.11135864]
[534.66149902 331.34738159]
[538.04687500 346.49066162]
[531.85382080 360.71829224]
[518.46368408 368.55947876]
[503.02526855 366.99908447]
[491.47494507 356.63714600]
[488.25405884 341.45803833]
[474.50051880 335.47134399]
[460.74700928 329.48464966]
[453.15179443 336.60852051]
[443.57736206 340.79971313]
[433.11450195 341.55279541]
[422.96463013 338.75555420]
[414.30184937 332.70504761]
[408.13705444 324.07608032]
[405.20004272 313.84613037]
[405.85321045 303.18457031]
[398.44485474 302.86938477]
[392.38824463 295.98739624]
[379.22305298 288.79864502]
[366.05789185 281.60992432]
[357.03732300 292.54089355]
[346.14501953 301.61480713]
[333.75686646 308.51644897]
[320.30072021 313.00564575]
[306.24166870 314.92556763]
[292.06600952 314.20822144]
[278.26431274 310.87680054]
[265.31448364 305.04507446]
[253.66528320 296.91333008]
[243.72068787 286.76171875]
[235.82594299 274.94033813]
[230.25552368 261.85736084]
[227.20364380 247.96485901]
] def
/pairs [
[2 116]
[3 115]
[4 114]
[5 113]
[6 112]
[16 110]
[18 109]
[19 108]
[20 107]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[50 59]
[51 58]
[52 57]
[61 102]
[62 101]
[63 100]
[130 162]
[131 161]
[132 160]
[133 158]
[137 150]
[138 149]
[139 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 116 8 gmark
2 cmark
116 cmark
3 115 5 gmark
3 cmark
115 cmark
4 114 4 gmark
4 cmark
114 cmark
5 113 3 gmark
5 cmark
113 cmark
6 112 3 gmark
6 cmark
112 cmark
16 cmark
110 cmark
18 cmark
109 cmark
19 108 1 gmark
19 cmark
108 cmark
20 cmark
107 cmark
26 47 23 gmark
26 cmark
47 cmark
27 46 2 gmark
27 cmark
46 cmark
28 45 5 gmark
28 cmark
45 cmark
29 cmark
44 cmark
30 43 1 gmark
43 cmark
50 cmark
59 cmark
51 58 1 gmark
51 cmark
58 cmark
52 57 1 gmark
52 cmark
61 102 2 gmark
61 cmark
102 cmark
62 cmark
101 cmark
130 162 12 gmark
130 cmark
162 cmark
131 161 12 gmark
131 cmark
161 cmark
132 160 10 gmark
132 cmark
160 cmark
133 158 11 gmark
133 cmark
158 cmark
137 150 3 gmark
137 cmark
150 cmark
138 cmark
149 cmark
139 cmark
148 cmark

% End Annotations
% show it
showpage
end
%%EOF
