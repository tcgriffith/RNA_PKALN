%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Sat Nov 28 23:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
___AUACUGAAAUGCAU_GG_U__GGGAAAUCAGUGUGA____A_AUUCAUUGGCUGUUCCUGCAACC_________________G_______________U_____________A____________A____________A____________G__________UCGGAGCGCCACCCAGUA_U_AGUCCGCUGUUGAAUGAAGGCCAGGAAAAGU____C_U_A__GU__UCUA_C_A_AUGAA_AA_A___\
) def
/coor [
[183.28540039 268.55645752]
[187.92973328 257.39636230]
[193.50584412 246.67089844]
[199.97343445 236.45770264]
[207.28581238 226.83070374]
[196.26313782 216.65716553]
[185.24046326 206.48364258]
[174.21778870 196.31011963]
[163.19511414 186.13659668]
[165.25064087 200.99508667]
[159.90554810 215.01042175]
[148.47778320 224.72673035]
[133.78523254 227.74813843]
[119.45076752 223.32963562]
[109.00897980 212.56074524]
[105.03459167 198.09684753]
[108.50761414 183.50445557]
[118.57167053 172.38174438]
[132.74516296 167.47134399]
[147.53210449 169.98358154]
[140.79405212 166.99882507]
[137.65258789 158.45216370]
[133.07847595 157.16990662]
[129.25059509 153.01716614]
[127.87023926 146.59762573]
[118.46638489 134.91142273]
[112.20671844 139.28868103]
[104.94962311 142.50080872]
[96.92032623 144.32798767]
[88.39112091 144.59541321]
[79.67213440 143.18309021]
[71.10011292 140.03382874]
[58.10973358 147.53382874]
[45.11935043 155.03382874]
[32.12897110 162.53382874]
[19.13858795 170.03382874]
[20.33057213 185.25032043]
[14.79431534 199.47398376]
[3.62904835 209.88069153]
[-10.94835854 214.40419006]
[-26.04354858 212.14631653]
[-38.65936279 203.55540466]
[-46.29092407 190.33714294]
[-47.42297363 175.11607361]
[-41.83074951 160.91432190]
[-30.62458611 150.55166626]
[-16.02947998 146.08561707]
[-0.94329715 148.40290833]
[11.63858891 157.04344177]
[24.62896919 149.54344177]
[37.61935043 142.04344177]
[50.60973358 134.54344177]
[63.60011292 127.04344177]
[61.37053680 119.88250732]
[56.91138458 105.56063843]
[54.68180847 98.39970398]
[39.72987747 99.59961700]
[24.77794838 100.79953003]
[11.59181213 110.54929352]
[-3.33476663 103.75743866]
[-4.64660406 87.41084290]
[9.00580597 78.32548523]
[23.57803345 85.84760284]
[38.52996445 84.64768982]
[53.48189545 83.44776917]
[67.29899597 69.91511536]
[83.71057892 64.02126312]
[80.23136139 49.43033981]
[76.77824402 64.02746582]
[68.81881714 76.74153137]
[57.19686890 86.22469330]
[43.14447403 91.47161865]
[28.15136147 91.92606354]
[13.80698204 87.53986359]
[1.63201809 78.77799988]
[-7.08283329 66.56933594]
[-11.41369057 52.20815277]
[-10.90143013 37.21689987]
[-5.60035753 23.18484497]
[3.92754841 11.59955120]
[16.67221260 3.68920708]
[31.28254128 0.29240477]
[46.20966339 1.76924777]
[59.87111664 7.96317244]
[70.81861877 18.21754646]
[77.89185333 31.44601631]
[62.90468597 30.66649628]
[48.02117157 28.74199867]
[33.32864380 25.68381882]
[18.91333389 21.50990486]
[4.85983324 16.24474907]
[-8.74938583 9.91925240]
[-21.83445740 2.57053351]
[-34.31859207 -5.75828075]
[-46.12852478 -15.01831341]
[-57.19495392 -25.15522194]
[-67.45293427 -36.10951614]
[-76.84226227 -47.81691742]
[-85.30784607 -60.20871353]
[-92.80000305 -73.21218872]
[-99.27476501 -86.75102997]
[-104.69412994 -100.74578857]
[-109.02629852 -115.11433411]
[-112.24584961 -129.77233887]
[-114.33388519 -144.63380432]
[-115.27815247 -159.61148071]
[-115.07311249 -174.61750793]
[-113.71997070 -189.56379700]
[-111.22666168 -204.36265564]
[-107.60781860 -218.92723083]
[-102.88468933 -233.17204285]
[-97.08497620 -247.01350403]
[-90.24271393 -260.37039185]
[-82.39807129 -273.16430664]
[-73.59707642 -285.32019043]
[-63.89137650 -296.76666260]
[-53.33792877 -307.43661499]
[-41.99866486 -317.26736450]
[-29.94013405 -326.20126343]
[-17.23309708 -334.18588257]
[-3.95212555 -341.17431641]
[9.82484055 -347.12564087]
[24.01695251 -352.00485229]
[38.54092407 -355.78332520]
[53.31151962 -358.43893433]
[68.24205780 -359.95605469]
[83.24492645 -360.32580566]
[98.23207855 -359.54598999]
[113.11555481 -357.62121582]
[127.80802155 -354.56277466]
[142.22325134 -350.38858032]
[156.27665710 -345.12316895]
[169.88575745 -338.79739380]
[182.97068787 -331.44842529]
[195.45466614 -323.11938477]
[207.26441956 -313.85913086]
[218.33065796 -303.72201538]
[228.58842468 -292.76751709]
[237.97753906 -281.05993652]
[246.44288635 -268.66796875]
[253.93479919 -255.66436768]
[260.40930176 -242.12539673]
[265.82839966 -228.13053894]
[270.16030884 -213.76191711]
[273.37957764 -199.10385132]
[275.46731567 -184.24235535]
[276.41131592 -169.26464844]
[276.20599365 -154.25862122]
[274.85256958 -139.31236267]
[272.35897827 -124.51354980]
[268.73986816 -109.94904327]
[264.01644897 -95.70431519]
[258.21646118 -81.86296844]
[251.37396240 -68.50621796]
[243.52908325 -55.71244812]
[234.72784424 -43.55674362]
[225.02192688 -32.11043549]
[214.46827698 -21.44070244]
[203.12882996 -11.61015606]
[191.07012939 -2.67648530]
[178.36294556 5.30788183]
[165.08183289 12.29608917]
[151.30476379 18.24712753]
[137.11256409 23.12607193]
[122.58851624 26.90429115]
[107.81787109 29.55961227]
[92.88729858 31.07645416]
[94.82228851 45.95112610]
[98.30149841 60.54204941]
[116.11047363 63.94077682]
[130.52436829 74.93852234]
[138.50564575 91.21765137]
[138.37236023 109.34754181]
[130.15258789 125.50756836]
[139.55645752 137.19377136]
[149.10356140 148.76324463]
[158.86283875 160.15431213]
[170.26206970 164.64445496]
[173.36863708 175.11392212]
[184.39131165 185.28744507]
[195.41398621 195.46096802]
[206.43666077 205.63450623]
[217.45933533 215.80802917]
[231.38653564 203.89425659]
[246.73004150 193.87231445]
[263.23455811 185.90858459]
[280.62551880 180.13522339]
[298.61367798 176.64794922]
[316.89984131 175.50444031]
[335.17999268 176.72340393]
[353.15017700 180.28430176]
[370.51162720 186.12760925]
[386.97579956 194.15589905]
[402.26904297 204.23541260]
[416.13723755 216.19827271]
[428.34997559 229.84538269]
[438.70443726 244.94960022]
[447.02868652 261.25961304]
[453.18457031 278.50408936]
[457.07000732 296.39620972]
[458.62069702 314.63839722]
[457.81115723 332.92730713]
[454.65515137 350.95886230]
[449.20544434 368.43325806]
[441.55291748 385.06008911]
[454.54327393 392.56008911]
[467.71450806 399.73776245]
[481.67193604 392.95767212]
[496.94305420 395.70959473]
[507.65576172 406.93533325]
[509.69082642 422.31838989]
[502.26574707 435.94363403]
[488.23556519 442.57189941]
[472.99520874 439.65447998]
[462.40490723 428.31320190]
[460.53683472 412.90896606]
[447.36560059 405.73129272]
[444.66378784 406.37173462]
[441.54879761 405.99572754]
[438.40106201 404.44186401]
[435.65200806 401.68737793]
[433.73513794 397.86175537]
[426.49423218 407.52212524]
[418.45828247 416.53256226]
[409.68539429 424.82781982]
[400.23901367 432.34786987]
[390.18734741 439.03823853]
[379.60314941 444.85043335]
[368.56292725 449.74237061]
[357.14648438 453.67858887]
[345.43643188 456.63052368]
[333.51745605 458.57675171]
[321.47573853 459.50314331]
[309.39843750 459.40289307]
[297.37289429 458.27664185]
[285.48614502 456.13250732]
[273.82412720 452.98587036]
[262.47128296 448.85949707]
[251.50976562 443.78308105]
[241.01887512 437.79333496]
[231.07458496 430.93350220]
[221.74884033 423.25317383]
[213.10917664 414.80783081]
[205.21813965 405.65850830]
[198.13287354 395.87136841]
[191.90470886 385.51715088]
[186.57873535 374.67074585]
[182.19358826 363.41055298]
[178.78103638 351.81802368]
[176.36585999 339.97702026]
[174.96557617 327.97314453]
[174.59042358 315.89328003]
[175.24316406 303.82476807]
[176.91915894 291.85494995]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[20 177]
[22 176]
[25 175]
[26 174]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[56 65]
[57 64]
[58 63]
[67 169]
[68 168]
[86 167]
[205 222]
[206 217]
[207 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 183 16 gmark
5 cmark
183 cmark
6 182 8 gmark
6 cmark
182 cmark
7 181 5 gmark
7 cmark
181 cmark
8 180 6 gmark
8 cmark
180 cmark
9 179 4 gmark
9 cmark
179 cmark
20 177 1 gmark
20 cmark
177 cmark
22 cmark
176 cmark
25 175 1 gmark
25 cmark
175 cmark
26 cmark
174 cmark
32 53 23 gmark
32 cmark
53 cmark
33 52 2 gmark
33 cmark
52 cmark
34 51 5 gmark
34 cmark
51 cmark
35 cmark
50 cmark
36 49 1 gmark
49 cmark
56 65 1 gmark
56 cmark
65 cmark
57 64 1 gmark
57 cmark
64 cmark
58 63 1 gmark
58 cmark
67 169 2 gmark
67 cmark
169 cmark
68 cmark
168 cmark
205 222 1 gmark
205 cmark
222 cmark
206 217 2 gmark
206 cmark
217 cmark
207 cmark
216 cmark

% End Annotations
% show it
showpage
end
%%EOF
