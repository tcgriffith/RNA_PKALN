%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Sat Nov 28 23:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AAACGUUCACCCU_______________________UUUU_________________________________CAGGGCGCAG_UUCGACUCAA_GCCAUGGAACGG_GGACUUGGG\
) def
/coor [
[87.86776733 137.59492493]
[72.81993103 128.66728210]
[63.10406494 114.11592102]
[60.62615204 96.79541016]
[65.87229156 80.10355377]
[54.58372879 70.22588348]
[43.62905502 71.58201599]
[33.96697998 66.71849060]
[28.74876022 57.49659729]
[29.52230263 47.15076447]
[18.77545166 36.68629074]
[8.02860069 26.22181702]
[-2.71825004 15.75734425]
[-13.46510124 5.29287148]
[-24.98901558 14.91593838]
[-37.44131851 23.30308342]
[-50.69000626 30.36539650]
[-64.59464264 36.02801514]
[-79.00782013 40.23090744]
[-93.77675629 42.92952728]
[-108.74488831 44.09526443]
[-123.75355530 43.71576309]
[-138.64364624 41.79504013]
[-153.25732422 38.35346603]
[-167.43968201 33.42751694]
[-181.04035950 27.06941032]
[-193.91519165 19.34654808]
[-205.92770386 10.34079552]
[-216.95056152 0.14762035]
[-226.86689758 -11.12492561]
[-235.57159424 -23.35734558]
[-242.97239685 -36.41997147]
[-248.99084473 -50.17432785]
[-253.56312561 -64.47461700]
[-256.64077759 -79.16924286]
[-258.19119263 -94.10243988]
[-258.19790649 -109.11589813]
[-256.66088867 -124.05047607]
[-253.59638977 -138.74784851]
[-249.03691101 -153.05223083]
[-243.03079224 -166.81196594]
[-235.64169312 -179.88122559]
[-226.94795227 -192.12142944]
[-217.04170227 -203.40284729]
[-206.02799988 -213.60589600]
[-194.02354431 -222.62240601]
[-181.15563965 -230.35679626]
[-167.56065369 -236.72708130]
[-153.38272095 -241.66572571]
[-138.77214050 -245.12039185]
[-123.88376617 -247.05444336]
[-108.87545013 -247.44738770]
[-93.90627289 -246.29505920]
[-79.13492584 -243.60966492]
[-64.71798706 -239.41969299]
[-50.80829239 -233.76953125]
[-37.55328369 -226.71908569]
[-25.09347343 -218.34309387]
[-13.56094456 -208.73034668]
[-3.07794762 -197.98275757]
[6.24439192 -186.21423340]
[14.30725193 -173.54954529]
[21.02516174 -160.12294006]
[26.32690811 -146.07675171]
[30.15628815 -131.55987549]
[32.47270966 -116.72618866]
[33.25161743 -101.73294067]
[32.48475266 -86.73908234]
[30.18024635 -71.90353394]
[26.36252594 -57.38358307]
[21.07206535 -43.33313751]
[14.36494064 -29.90114212]
[6.31225586 -17.22998238]
[-3.00062823 -5.45397997]
[7.74622297 5.01049328]
[18.49307442 15.47496605]
[29.23992538 25.93943787]
[39.98677444 36.40391159]
[58.97535706 39.62842941]
[64.46140289 58.93732071]
[75.74996185 68.81498718]
[86.62310028 62.82974625]
[98.81671906 60.51368713]
[111.12713623 62.09543610]
[122.33916473 67.41885376]
[131.34602356 75.95845795]
[137.25863647 86.87126923]
[139.49333191 99.08005524]
[137.82951355 111.37965393]
[132.43145752 122.55593872]
[142.89591980 133.30278015]
[153.36039734 144.04963684]
[163.82487488 154.79649353]
[174.28933716 165.54333496]
[182.63076782 169.57789612]
[184.88459778 176.71833801]
[195.20507812 187.60353088]
[205.66955566 198.35037231]
[220.53677368 194.49531555]
[235.33540344 198.60580444]
[246.08468628 209.57615662]
[249.89312744 224.45538330]
[245.73626709 239.24104309]
[234.73228455 249.95590210]
[219.84120178 253.71768188]
[205.06863403 249.51449585]
[194.38832092 238.47697449]
[190.67323303 223.57417297]
[194.92269897 208.81484985]
[184.45823669 198.06799316]
[177.44787598 195.43733215]
[173.86297607 186.89300537]
[163.54249573 176.00781250]
[153.07801819 165.26095581]
[142.61354065 154.51411438]
[132.14907837 143.76725769]
[121.68460083 133.02040100]
] def
/pairs [
[5 81]
[6 80]
[10 78]
[11 77]
[12 76]
[13 75]
[14 74]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[96 112]
[97 110]
[98 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 78 154 gmark
10 cmark
78 cmark
11 cmark
77 cmark
12 76 2 gmark
12 cmark
76 cmark
13 75 43 gmark
13 cmark
75 cmark
14 74 186 gmark
14 cmark
74 cmark
90 117 80 gmark
90 cmark
117 cmark
91 116 6 gmark
91 cmark
116 cmark
92 115 1 gmark
92 cmark
115 cmark
93 114 1 gmark
93 cmark
114 cmark
94 113 9 gmark
94 cmark
113 cmark
96 112 149 gmark
96 cmark
112 cmark
97 110 25 gmark
97 cmark
110 cmark
98 109 11 gmark
98 cmark
109 cmark

% End Annotations
% show it
showpage
end
%%EOF
