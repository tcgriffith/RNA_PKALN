%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Mar 10 17:53:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (reference)
} def

/sequence { (\
GGGCGAUGAGGCCCGCCCAAACUGCCCUGAAAAGGGCUGAUGGCCUCUACUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.009849125 ubox
1 14 0.978092978 ubox
1 18 0.154055576 ubox
1 27 0.005074932 ubox
1 46 0.013954721 ubox
1 47 0.006467310 ubox
1 50 0.009023548 ubox
1 51 0.041033888 ubox
2 7 0.003257266 ubox
2 12 0.009811015 ubox
2 13 0.978834698 ubox
2 14 0.004222003 ubox
2 17 0.154234542 ubox
2 26 0.005084019 ubox
2 45 0.017200063 ubox
2 50 0.043376619 ubox
2 51 0.038380797 ubox
3 12 0.978843284 ubox
3 16 0.154254696 ubox
3 25 0.005084240 ubox
3 44 0.017222117 ubox
3 48 0.003169411 ubox
3 50 0.040210644 ubox
3 51 0.007039300 ubox
4 10 0.033841058 ubox
4 11 0.978113271 ubox
4 15 0.154252571 ubox
4 24 0.005083637 ubox
4 43 0.017232106 ubox
4 52 0.018488601 ubox
5 13 0.004715095 ubox
5 14 0.153823664 ubox
5 23 0.004748454 ubox
5 47 0.003571769 ubox
5 48 0.009445763 ubox
5 50 0.042904550 ubox
5 51 0.016209902 ubox
6 41 0.016766757 ubox
6 48 0.025966122 ubox
6 51 0.006632965 ubox
7 19 0.004613257 ubox
7 40 0.016383612 ubox
7 49 0.017452391 ubox
8 12 0.007652157 ubox
8 13 0.014876462 ubox
8 18 0.005301031 ubox
8 47 0.132432408 ubox
9 38 0.011404959 ubox
9 46 0.132693988 ubox
10 17 0.006673803 ubox
10 18 0.004339202 ubox
10 37 0.007669296 ubox
10 38 0.011677065 ubox
10 45 0.132767950 ubox
11 16 0.006646856 ubox
11 17 0.004312097 ubox
11 37 0.013871109 ubox
11 44 0.132751177 ubox
12 36 0.015641381 ubox
12 43 0.131241404 ubox
13 35 0.015642763 ubox
13 42 0.129435263 ubox
13 43 0.017966886 ubox
14 34 0.015638348 ubox
14 39 0.027457700 ubox
14 42 0.025385959 ubox
15 22 0.012211818 ubox
15 37 0.021697121 ubox
15 38 0.024449243 ubox
15 41 0.028259422 ubox
15 44 0.897197166 ubox
15 45 0.288539220 ubox
15 46 0.013271571 ubox
15 47 0.066179973 ubox
15 48 0.004701707 ubox
15 50 0.007228591 ubox
16 36 0.021899734 ubox
16 39 0.043666313 ubox
16 42 0.003767393 ubox
16 43 0.867105772 ubox
16 52 0.003559684 ubox
17 35 0.021895773 ubox
17 39 0.014540155 ubox
17 42 0.830938347 ubox
17 43 0.449901692 ubox
18 29 0.012071652 ubox
18 34 0.021859910 ubox
18 39 0.176260037 ubox
18 42 0.512583809 ubox
18 43 0.013260258 ubox
19 23 0.003212865 ubox
19 28 0.011933717 ubox
19 38 0.176180672 ubox
19 41 0.546385164 ubox
20 38 0.067147913 ubox
20 41 0.187957890 ubox
21 38 0.138910377 ubox
21 41 0.087185786 ubox
22 29 0.011376958 ubox
22 39 0.543820571 ubox
22 42 0.008354493 ubox
22 43 0.022038958 ubox
23 30 0.003927036 ubox
23 39 0.045168477 ubox
23 40 0.014931501 ubox
23 42 0.021936480 ubox
24 37 0.998414810 ubox
24 38 0.007563506 ubox
25 36 0.999577016 ubox
26 35 0.999577701 ubox
27 34 0.999530980 ubox
28 32 0.010533110 ubox
28 33 0.989464124 ubox
28 34 0.003168916 ubox
33 46 0.003350627 ubox
33 48 0.005481944 ubox
34 45 0.003538994 ubox
34 46 0.006631551 ubox
34 47 0.005648567 ubox
35 44 0.003523811 ubox
35 45 0.009106640 ubox
36 44 0.009209727 ubox
37 42 0.003717812 ubox
37 43 0.009254018 ubox
38 42 0.008472308 ubox
38 43 0.003633724 ubox
38 49 0.006458211 ubox
38 52 0.003194826 ubox
39 44 0.006957549 ubox
39 45 0.010397743 ubox
39 47 0.028818296 ubox
39 48 0.006101647 ubox
39 50 0.014807087 ubox
39 51 0.005881232 ubox
40 46 0.027718281 ubox
40 48 0.003424092 ubox
40 51 0.006185872 ubox
41 49 0.029056521 ubox
41 52 0.016156965 ubox
42 47 0.014668541 ubox
42 48 0.031843663 ubox
42 50 0.022903468 ubox
42 51 0.035216685 ubox
43 47 0.031444894 ubox
43 48 0.003177278 ubox
43 50 0.036539161 ubox
44 52 0.005014259 ubox
45 52 0.082249459 ubox
46 52 0.006958582 ubox
47 52 0.062217994 ubox
48 52 0.005969129 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
showpage
end
%%EOF
